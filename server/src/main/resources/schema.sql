drop table IF EXISTS users CASCADE;
drop table IF EXISTS requests CASCADE;
drop table IF EXISTS items CASCADE;
drop table IF EXISTS bookings CASCADE;
drop table IF EXISTS comments CASCADE;

create TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

create table if not exists requests(
    id bigint generated by default as identity not null constraint requests_pk primary key,
    description  varchar(512) not null,
    requestor_id bigint not null constraint requests_users_id_fk references users
        on update cascade on delete cascade,
    created timestamp without time zone
);

create table if not exists items(
    id bigint generated by default as identity not null constraint items_pk primary key,
    name varchar(255) not null,
    description varchar(512) not null,
    is_available boolean not null,
    owner_id bigint not null constraint items_users_id_fk references users
        on update cascade on delete cascade,
    request_id bigint constraint items_requests_id_fk references requests
        on update cascade on delete cascade
);

create table if not exists bookings(
    id bigint generated by default as identity not null constraint bookings_pk primary key,
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    item_id bigint not null constraint bookings_items_id_fk references items
        on update cascade on delete cascade,
    booker_id bigint constraint bookings_users_id_fk references users
        on update cascade on delete cascade,
    status varchar(512) not null
);

create table if not exists comments(
    id bigint generated by default as identity not null constraint comments_pk primary key,
    text varchar(512) not null,
    item_id bigint not null constraint comments_items_id_fk references items
        on update cascade on delete cascade,
    author_id  bigint constraint comments_users_id_fk references users
        on update cascade on delete cascade,
    created timestamp without time zone
)



